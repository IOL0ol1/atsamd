# Copyright (c) 2014-2015 Arduino LLC.  All right reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

menu.cache=Cache
menu.speed=CPU Speed
menu.opt=Optimize
menu.maxqspi=Max QSPI
menu.usbstack=USB Stack
menu.debug=Debug

# -----------------------------------
# Atmel SAMD51P20A
# -----------------------------------
samd51p20a.name=Atmel SAMD51P20A

# VID/PID for Bootloader, Arduino & CircuitPython
samd51p20a.vid.0=0x239A
samd51p20a.pid.0=0x8031
samd51p20a.vid.1=0x239A
samd51p20a.pid.1=0x0031
samd51p20a.vid.2=0x239A
samd51p20a.pid.2=0x0032

# Upload
samd51p20a.upload.tool=bossac18
samd51p20a.upload.protocol=sam-ba
samd51p20a.upload.maximum_size=1032192
samd51p20a.upload.offset=0x4000
samd51p20a.upload.use_1200bps_touch=true
samd51p20a.upload.wait_for_upload_port=true
samd51p20a.upload.native_usb=true

# Build
samd51p20a.build.mcu=cortex-m4
samd51p20a.build.f_cpu=120000000L
samd51p20a.build.usb_product="SAMD51P20A"
samd51p20a.build.usb_manufacturer="Atmel"
samd51p20a.build.board=SAMD51P20A
samd51p20a.build.core=arduino
samd51p20a.build.extra_flags=-D__SAMD51P20A__ -D__SAMD51__ -D__FPU_PRESENT -DARM_MATH_CM4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 {build.usb_flags}
samd51p20a.build.ldscript=linker_scripts/gcc/flash_with_bootloader.ld
samd51p20a.build.openocdscript=scripts/openocd/daplink_samd51.cfg
samd51p20a.build.variant=samd51p20a
samd51p20a.build.variant_system_lib=
samd51p20a.build.vid=0x239A
samd51p20a.build.pid=0x8031
samd51p20a.bootloader.tool=openocd
samd51p20a.bootloader.file=samd51p20a/bootloader-samd51p20a.bin
samd51p20a.compiler.arm.cmsis.ldflags="-L{runtime.tools.CMSIS-5.4.0.path}/CMSIS/Lib/GCC/" "-L{build.variant.path}" -larm_cortexM4lf_math -mfloat-abi=hard -mfpu=fpv4-sp-d16

# Menu: Cache
samd51p20a.menu.cache.on=Enabled
samd51p20a.menu.cache.on.build.cache_flags=-DENABLE_CACHE
samd51p20a.menu.cache.off=Disabled
samd51p20a.menu.cache.off.build.cache_flags=

# Menu: Speed
samd51p20a.menu.speed.120=120 MHz (standard)
samd51p20a.menu.speed.120.build.f_cpu=120000000L
samd51p20a.menu.speed.150=150 MHz (overclock)
samd51p20a.menu.speed.150.build.f_cpu=150000000L
samd51p20a.menu.speed.180=180 MHz (overclock)
samd51p20a.menu.speed.180.build.f_cpu=180000000L
samd51p20a.menu.speed.200=200 MHz (overclock)
samd51p20a.menu.speed.200.build.f_cpu=200000000L

# Menu: Optimization
samd51p20a.menu.opt.small=Small (-Os) (standard)
samd51p20a.menu.opt.small.build.flags.optimize=-Os
samd51p20a.menu.opt.fast=Fast (-O2)
samd51p20a.menu.opt.fast.build.flags.optimize=-O2
samd51p20a.menu.opt.faster=Faster (-O3)
samd51p20a.menu.opt.faster.build.flags.optimize=-O3
samd51p20a.menu.opt.fastest=Fastest (-Ofast)
samd51p20a.menu.opt.fastest.build.flags.optimize=-Ofast
samd51p20a.menu.opt.dragons=Here be dragons (-Ofast -funroll-loops)
samd51p20a.menu.opt.dragons.build.flags.optimize=-Ofast -funroll-loops

# Menu: QSPI Speed
samd51p20a.menu.maxqspi.50=50 MHz (standard)
samd51p20a.menu.maxqspi.50.build.flags.maxqspi=-DVARIANT_QSPI_BAUD_DEFAULT=50000000
samd51p20a.menu.maxqspi.fcpu=CPU Speed / 2
samd51p20a.menu.maxqspi.fcpu.build.flags.maxqspi=-DVARIANT_QSPI_BAUD_DEFAULT=({build.f_cpu})

# Menu: USB Stack
samd51p20a.menu.usbstack.arduino=Arduino
samd51p20a.menu.usbstack.tinyusb=TinyUSB
samd51p20a.menu.usbstack.tinyusb.build.flags.usbstack=-DUSE_TINYUSB

# Menu: Debug
samd51p20a.menu.debug.off=Off
samd51p20a.menu.debug.on=On
samd51p20a.menu.debug.on.build.flags.debug=-g
